@model IEnumerable<TPMRTweb.Models.TrainTransferRecord>

@{
    ViewData["Title"] = "列車正線運轉紀錄";
    Layout = "user_Layout";
}

<div class="container-xl">
    <div class="webstatediv">
        <a href="@Url.Action("Index","Home")"><img src="/images/home.png" alt="首頁" /></a> <a href="@Url.Action("Index","Home")">HOME</a> / B 列車正線運轉紀錄
        <div class="clear"></div>
    </div>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <style>
        #timeline {
            width: 100%;
            height: 600px;
        }
    </style>
    <h1>B.列車正線運轉紀錄</h1>
    <div class="clear"></div>

    @* <table class="table table-striped"> *@
    @*     <thead> *@
    @*         <tr> *@
    @*             <th>Train No</th> *@
    @*             <th>Start Time</th> *@
    @*             <th>End Time</th> *@
    @*         </tr> *@
    @*     </thead> *@
    @*     <tbody> *@
    @*         @foreach (var record in Model) *@
    @*         { *@
    @*             <tr> *@
    @*                 <td>@record.Train.TrainNo</td> *@
    @*                 <td>@record.StartTime</td> *@
    @*                 <td>@record.EndTime</td> *@
    @*             </tr> *@
    @*         } *@
    @*     </tbody> *@
    @* </table> *@

    @if (Model != null && Model.Any())
    {
        <div id="timeline"></div>
        <script type="text/javascript">
            google.charts.load('current', { 'packages': ['timeline'] });
            google.charts.setOnLoadCallback(drawChart);

            function drawChart() {
                var container = document.getElementById('timeline');
                var chart = new google.visualization.Timeline(container);
                var dataTable = new google.visualization.DataTable();

                dataTable.addColumn({ type: 'string', id: 'TrainNo' });
                dataTable.addColumn({ type: 'string', id: 'Task' });
                dataTable.addColumn({ type: 'date', id: 'Start' });
                dataTable.addColumn({ type: 'date', id: 'End' });

                dataTable.addRows([
            @foreach (var record in Model)
            {
                if (record.StartTime.HasValue && record.EndTime.HasValue && record.Train?.TrainNo != null)
                {
                    var startDate = new DateTime(2025, 4, 17, record.StartTime.Value.Hours, record.StartTime.Value.Minutes, record.StartTime.Value.Seconds);
                    var endDate = new DateTime(2025, 4, 17, record.EndTime.Value.Hours, record.EndTime.Value.Minutes, record.EndTime.Value.Seconds);
                    if (record.EndTime < record.StartTime)
                    {
                        endDate = endDate.AddDays(1);
                    }
                    <text>
                                        ['@record.Train.TrainNo', '@record.Train.TrainNo',
                                         new Date(@startDate.Year, @startDate.Month - 1, @startDate.Day, @startDate.Hour, @startDate.Minute, @startDate.Second),
                                         new Date(@endDate.Year, @endDate.Month - 1, @endDate.Day, @endDate.Hour, @endDate.Minute, @endDate.Second)],
                    </text>
                }
            }
                ]);

                var options = {
                    timeline: {
                        showBarLabels: false,
                        singleColor: '#0268B7'
                    },
                    avoidOverlappingGridLines: false
                };

                chart.draw(dataTable, options);
            }
        </script>
    }

</div>
<div class="clear"></div>